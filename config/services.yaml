# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    # Services
    App\Service\Post\FeedInterface: '@App\Service\Post\FeedCache'
    App\Service\Post\FeedCache:
        arguments:
            $feed: '@App\Service\Post\Feed'

    App\Service\Dialog\ShardManager:
        arguments:
            $host: 'redis://%env(resolve:REDIS_HOST)%'
            $em: '@doctrine.orm.dialog_entity_manager'
            $emShard0: '@doctrine.orm.dialog_0_entity_manager'
            $emShard1: '@doctrine.orm.dialog_1_entity_manager'

    App\Service\Config\Config:
        arguments:
            $apiLogLogic: '%env(resolve:APP_CONFIG_API_LOG_LOGIC)%'
            $authTokenSchema: '%env(resolve:APP_CONFIG_AUTH_TOKEN_SCHEMA)%'

    App\Service\ApiToken\TokenRepositoryFactory:
        arguments:
            $doctrineTokenRepository: '@App\Service\ApiToken\Repository\DoctrineTokenRepository'
            $redisTokenRepository: '@App\Service\ApiToken\Repository\RedisTokenRepository'

    App\Service\ApiToken\Repository\RedisTokenRepository:
        arguments:
            $host: 'redis://%env(resolve:REDIS_HOST)%'

    App\WebSocket\Consumer\PostConsumer:
        arguments:
            $dsn: '%env(resolve:MESSENGER_TRANSPORT_DSN)%'

    # Commands
    App\Command\WebSocket\WebSocketServerCommand:
        arguments:
            $port: '%env(resolve:WEBSOCKET_PORT)%'
